// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/BuildInfoPB.proto

#ifndef PROTOBUF_proto_2fBuildInfoPB_2eproto__INCLUDED
#define PROTOBUF_proto_2fBuildInfoPB_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace molecular_dynamics {
namespace oligosaccharide_builder {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fBuildInfoPB_2eproto();
void protobuf_AssignDesc_proto_2fBuildInfoPB_2eproto();
void protobuf_ShutdownFile_proto_2fBuildInfoPB_2eproto();

class BuildInfo;
class BuildInfo_Linkage;
class SolvationInfo;

enum SolvationInfo_Shape {
  SolvationInfo_Shape_CUBIC = 0,
  SolvationInfo_Shape_RECTANGULAR = 1
};
bool SolvationInfo_Shape_IsValid(int value);
const SolvationInfo_Shape SolvationInfo_Shape_Shape_MIN = SolvationInfo_Shape_CUBIC;
const SolvationInfo_Shape SolvationInfo_Shape_Shape_MAX = SolvationInfo_Shape_RECTANGULAR;
const int SolvationInfo_Shape_Shape_ARRAYSIZE = SolvationInfo_Shape_Shape_MAX + 1;

const ::google::protobuf::EnumDescriptor* SolvationInfo_Shape_descriptor();
inline const ::std::string& SolvationInfo_Shape_Name(SolvationInfo_Shape value) {
  return ::google::protobuf::internal::NameOfEnum(
    SolvationInfo_Shape_descriptor(), value);
}
inline bool SolvationInfo_Shape_Parse(
    const ::std::string& name, SolvationInfo_Shape* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SolvationInfo_Shape>(
    SolvationInfo_Shape_descriptor(), name, value);
}
// ===================================================================

class BuildInfo_Linkage : public ::google::protobuf::Message {
 public:
  BuildInfo_Linkage();
  virtual ~BuildInfo_Linkage();
  
  BuildInfo_Linkage(const BuildInfo_Linkage& from);
  
  inline BuildInfo_Linkage& operator=(const BuildInfo_Linkage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildInfo_Linkage& default_instance();
  
  void Swap(BuildInfo_Linkage* other);
  
  // implements Message ----------------------------------------------
  
  BuildInfo_Linkage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildInfo_Linkage& from);
  void MergeFrom(const BuildInfo_Linkage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated double phi_value = 1;
  inline int phi_value_size() const;
  inline void clear_phi_value();
  static const int kPhiValueFieldNumber = 1;
  inline double phi_value(int index) const;
  inline void set_phi_value(int index, double value);
  inline void add_phi_value(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      phi_value() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_phi_value();
  
  // repeated double psi_value = 2;
  inline int psi_value_size() const;
  inline void clear_psi_value();
  static const int kPsiValueFieldNumber = 2;
  inline double psi_value(int index) const;
  inline void set_psi_value(int index, double value);
  inline void add_psi_value(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      psi_value() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_psi_value();
  
  // repeated double omega_value = 3;
  inline int omega_value_size() const;
  inline void clear_omega_value();
  static const int kOmegaValueFieldNumber = 3;
  inline double omega_value(int index) const;
  inline void set_omega_value(int index, double value);
  inline void add_omega_value(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      omega_value() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_omega_value();
  
  // @@protoc_insertion_point(class_scope:molecular_dynamics.oligosaccharide_builder.BuildInfo.Linkage)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< double > phi_value_;
  ::google::protobuf::RepeatedField< double > psi_value_;
  ::google::protobuf::RepeatedField< double > omega_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_proto_2fBuildInfoPB_2eproto();
  friend void protobuf_AssignDesc_proto_2fBuildInfoPB_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBuildInfoPB_2eproto();
  
  void InitAsDefaultInstance();
  static BuildInfo_Linkage* default_instance_;
};
// -------------------------------------------------------------------

class BuildInfo : public ::google::protobuf::Message {
 public:
  BuildInfo();
  virtual ~BuildInfo();
  
  BuildInfo(const BuildInfo& from);
  
  inline BuildInfo& operator=(const BuildInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildInfo& default_instance();
  
  void Swap(BuildInfo* other);
  
  // implements Message ----------------------------------------------
  
  BuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildInfo& from);
  void MergeFrom(const BuildInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef BuildInfo_Linkage Linkage;
  
  // accessors -------------------------------------------------------
  
  // required string glycan = 1;
  inline bool has_glycan() const;
  inline void clear_glycan();
  static const int kGlycanFieldNumber = 1;
  inline const ::std::string& glycan() const;
  inline void set_glycan(const ::std::string& value);
  inline void set_glycan(const char* value);
  inline void set_glycan(const char* value, size_t size);
  inline ::std::string* mutable_glycan();
  inline ::std::string* release_glycan();
  
  // repeated .molecular_dynamics.oligosaccharide_builder.BuildInfo.Linkage linkage = 2;
  inline int linkage_size() const;
  inline void clear_linkage();
  static const int kLinkageFieldNumber = 2;
  inline const ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage& linkage(int index) const;
  inline ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage* mutable_linkage(int index);
  inline ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage* add_linkage();
  inline const ::google::protobuf::RepeatedPtrField< ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage >&
      linkage() const;
  inline ::google::protobuf::RepeatedPtrField< ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage >*
      mutable_linkage();
  
  // optional .molecular_dynamics.oligosaccharide_builder.SolvationInfo solvation_info = 3;
  inline bool has_solvation_info() const;
  inline void clear_solvation_info();
  static const int kSolvationInfoFieldNumber = 3;
  inline const ::molecular_dynamics::oligosaccharide_builder::SolvationInfo& solvation_info() const;
  inline ::molecular_dynamics::oligosaccharide_builder::SolvationInfo* mutable_solvation_info();
  inline ::molecular_dynamics::oligosaccharide_builder::SolvationInfo* release_solvation_info();
  
  // @@protoc_insertion_point(class_scope:molecular_dynamics.oligosaccharide_builder.BuildInfo)
 private:
  inline void set_has_glycan();
  inline void clear_has_glycan();
  inline void set_has_solvation_info();
  inline void clear_has_solvation_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* glycan_;
  ::google::protobuf::RepeatedPtrField< ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage > linkage_;
  ::molecular_dynamics::oligosaccharide_builder::SolvationInfo* solvation_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_proto_2fBuildInfoPB_2eproto();
  friend void protobuf_AssignDesc_proto_2fBuildInfoPB_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBuildInfoPB_2eproto();
  
  void InitAsDefaultInstance();
  static BuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class SolvationInfo : public ::google::protobuf::Message {
 public:
  SolvationInfo();
  virtual ~SolvationInfo();
  
  SolvationInfo(const SolvationInfo& from);
  
  inline SolvationInfo& operator=(const SolvationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SolvationInfo& default_instance();
  
  void Swap(SolvationInfo* other);
  
  // implements Message ----------------------------------------------
  
  SolvationInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SolvationInfo& from);
  void MergeFrom(const SolvationInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef SolvationInfo_Shape Shape;
  static const Shape CUBIC = SolvationInfo_Shape_CUBIC;
  static const Shape RECTANGULAR = SolvationInfo_Shape_RECTANGULAR;
  static inline bool Shape_IsValid(int value) {
    return SolvationInfo_Shape_IsValid(value);
  }
  static const Shape Shape_MIN =
    SolvationInfo_Shape_Shape_MIN;
  static const Shape Shape_MAX =
    SolvationInfo_Shape_Shape_MAX;
  static const int Shape_ARRAYSIZE =
    SolvationInfo_Shape_Shape_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Shape_descriptor() {
    return SolvationInfo_Shape_descriptor();
  }
  static inline const ::std::string& Shape_Name(Shape value) {
    return SolvationInfo_Shape_Name(value);
  }
  static inline bool Shape_Parse(const ::std::string& name,
      Shape* value) {
    return SolvationInfo_Shape_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .molecular_dynamics.oligosaccharide_builder.SolvationInfo.Shape shape = 1 [default = CUBIC];
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 1;
  inline ::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape shape() const;
  inline void set_shape(::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape value);
  
  // required double distance = 2;
  inline bool has_distance() const;
  inline void clear_distance();
  static const int kDistanceFieldNumber = 2;
  inline double distance() const;
  inline void set_distance(double value);
  
  // required double closeness = 3;
  inline bool has_closeness() const;
  inline void clear_closeness();
  static const int kClosenessFieldNumber = 3;
  inline double closeness() const;
  inline void set_closeness(double value);
  
  // @@protoc_insertion_point(class_scope:molecular_dynamics.oligosaccharide_builder.SolvationInfo)
 private:
  inline void set_has_shape();
  inline void clear_has_shape();
  inline void set_has_distance();
  inline void clear_has_distance();
  inline void set_has_closeness();
  inline void clear_has_closeness();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double distance_;
  double closeness_;
  int shape_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_proto_2fBuildInfoPB_2eproto();
  friend void protobuf_AssignDesc_proto_2fBuildInfoPB_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBuildInfoPB_2eproto();
  
  void InitAsDefaultInstance();
  static SolvationInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// BuildInfo_Linkage

// repeated double phi_value = 1;
inline int BuildInfo_Linkage::phi_value_size() const {
  return phi_value_.size();
}
inline void BuildInfo_Linkage::clear_phi_value() {
  phi_value_.Clear();
}
inline double BuildInfo_Linkage::phi_value(int index) const {
  return phi_value_.Get(index);
}
inline void BuildInfo_Linkage::set_phi_value(int index, double value) {
  phi_value_.Set(index, value);
}
inline void BuildInfo_Linkage::add_phi_value(double value) {
  phi_value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
BuildInfo_Linkage::phi_value() const {
  return phi_value_;
}
inline ::google::protobuf::RepeatedField< double >*
BuildInfo_Linkage::mutable_phi_value() {
  return &phi_value_;
}

// repeated double psi_value = 2;
inline int BuildInfo_Linkage::psi_value_size() const {
  return psi_value_.size();
}
inline void BuildInfo_Linkage::clear_psi_value() {
  psi_value_.Clear();
}
inline double BuildInfo_Linkage::psi_value(int index) const {
  return psi_value_.Get(index);
}
inline void BuildInfo_Linkage::set_psi_value(int index, double value) {
  psi_value_.Set(index, value);
}
inline void BuildInfo_Linkage::add_psi_value(double value) {
  psi_value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
BuildInfo_Linkage::psi_value() const {
  return psi_value_;
}
inline ::google::protobuf::RepeatedField< double >*
BuildInfo_Linkage::mutable_psi_value() {
  return &psi_value_;
}

// repeated double omega_value = 3;
inline int BuildInfo_Linkage::omega_value_size() const {
  return omega_value_.size();
}
inline void BuildInfo_Linkage::clear_omega_value() {
  omega_value_.Clear();
}
inline double BuildInfo_Linkage::omega_value(int index) const {
  return omega_value_.Get(index);
}
inline void BuildInfo_Linkage::set_omega_value(int index, double value) {
  omega_value_.Set(index, value);
}
inline void BuildInfo_Linkage::add_omega_value(double value) {
  omega_value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
BuildInfo_Linkage::omega_value() const {
  return omega_value_;
}
inline ::google::protobuf::RepeatedField< double >*
BuildInfo_Linkage::mutable_omega_value() {
  return &omega_value_;
}

// -------------------------------------------------------------------

// BuildInfo

// required string glycan = 1;
inline bool BuildInfo::has_glycan() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildInfo::set_has_glycan() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildInfo::clear_has_glycan() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildInfo::clear_glycan() {
  if (glycan_ != &::google::protobuf::internal::kEmptyString) {
    glycan_->clear();
  }
  clear_has_glycan();
}
inline const ::std::string& BuildInfo::glycan() const {
  return *glycan_;
}
inline void BuildInfo::set_glycan(const ::std::string& value) {
  set_has_glycan();
  if (glycan_ == &::google::protobuf::internal::kEmptyString) {
    glycan_ = new ::std::string;
  }
  glycan_->assign(value);
}
inline void BuildInfo::set_glycan(const char* value) {
  set_has_glycan();
  if (glycan_ == &::google::protobuf::internal::kEmptyString) {
    glycan_ = new ::std::string;
  }
  glycan_->assign(value);
}
inline void BuildInfo::set_glycan(const char* value, size_t size) {
  set_has_glycan();
  if (glycan_ == &::google::protobuf::internal::kEmptyString) {
    glycan_ = new ::std::string;
  }
  glycan_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuildInfo::mutable_glycan() {
  set_has_glycan();
  if (glycan_ == &::google::protobuf::internal::kEmptyString) {
    glycan_ = new ::std::string;
  }
  return glycan_;
}
inline ::std::string* BuildInfo::release_glycan() {
  clear_has_glycan();
  if (glycan_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = glycan_;
    glycan_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .molecular_dynamics.oligosaccharide_builder.BuildInfo.Linkage linkage = 2;
inline int BuildInfo::linkage_size() const {
  return linkage_.size();
}
inline void BuildInfo::clear_linkage() {
  linkage_.Clear();
}
inline const ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage& BuildInfo::linkage(int index) const {
  return linkage_.Get(index);
}
inline ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage* BuildInfo::mutable_linkage(int index) {
  return linkage_.Mutable(index);
}
inline ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage* BuildInfo::add_linkage() {
  return linkage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage >&
BuildInfo::linkage() const {
  return linkage_;
}
inline ::google::protobuf::RepeatedPtrField< ::molecular_dynamics::oligosaccharide_builder::BuildInfo_Linkage >*
BuildInfo::mutable_linkage() {
  return &linkage_;
}

// optional .molecular_dynamics.oligosaccharide_builder.SolvationInfo solvation_info = 3;
inline bool BuildInfo::has_solvation_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildInfo::set_has_solvation_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildInfo::clear_has_solvation_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildInfo::clear_solvation_info() {
  if (solvation_info_ != NULL) solvation_info_->::molecular_dynamics::oligosaccharide_builder::SolvationInfo::Clear();
  clear_has_solvation_info();
}
inline const ::molecular_dynamics::oligosaccharide_builder::SolvationInfo& BuildInfo::solvation_info() const {
  return solvation_info_ != NULL ? *solvation_info_ : *default_instance_->solvation_info_;
}
inline ::molecular_dynamics::oligosaccharide_builder::SolvationInfo* BuildInfo::mutable_solvation_info() {
  set_has_solvation_info();
  if (solvation_info_ == NULL) solvation_info_ = new ::molecular_dynamics::oligosaccharide_builder::SolvationInfo;
  return solvation_info_;
}
inline ::molecular_dynamics::oligosaccharide_builder::SolvationInfo* BuildInfo::release_solvation_info() {
  clear_has_solvation_info();
  ::molecular_dynamics::oligosaccharide_builder::SolvationInfo* temp = solvation_info_;
  solvation_info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// SolvationInfo

// required .molecular_dynamics.oligosaccharide_builder.SolvationInfo.Shape shape = 1 [default = CUBIC];
inline bool SolvationInfo::has_shape() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SolvationInfo::set_has_shape() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SolvationInfo::clear_has_shape() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SolvationInfo::clear_shape() {
  shape_ = 0;
  clear_has_shape();
}
inline ::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape SolvationInfo::shape() const {
  return static_cast< ::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape >(shape_);
}
inline void SolvationInfo::set_shape(::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape value) {
  GOOGLE_DCHECK(::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape_IsValid(value));
  set_has_shape();
  shape_ = value;
}

// required double distance = 2;
inline bool SolvationInfo::has_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SolvationInfo::set_has_distance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SolvationInfo::clear_has_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SolvationInfo::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline double SolvationInfo::distance() const {
  return distance_;
}
inline void SolvationInfo::set_distance(double value) {
  set_has_distance();
  distance_ = value;
}

// required double closeness = 3;
inline bool SolvationInfo::has_closeness() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SolvationInfo::set_has_closeness() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SolvationInfo::clear_has_closeness() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SolvationInfo::clear_closeness() {
  closeness_ = 0;
  clear_has_closeness();
}
inline double SolvationInfo::closeness() const {
  return closeness_;
}
inline void SolvationInfo::set_closeness(double value) {
  set_has_closeness();
  closeness_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace oligosaccharide_builder
}  // namespace molecular_dynamics

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape>() {
  return ::molecular_dynamics::oligosaccharide_builder::SolvationInfo_Shape_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fBuildInfoPB_2eproto__INCLUDED
