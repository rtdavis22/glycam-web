// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/BuildResultsPB.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace molecular_dynamics {
namespace oligosaccharide_builder {

namespace {

const ::google::protobuf::Descriptor* BuildResults_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildResults_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildResults_FlexibleLinkage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildResults_FlexibleLinkage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BuildResults_FlexibleLinkage_Angle_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BuildResults_Structure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildResults_Structure_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fBuildResultsPB_2eproto() {
  protobuf_AddDesc_proto_2fBuildResultsPB_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/BuildResultsPB.proto");
  GOOGLE_CHECK(file != NULL);
  BuildResults_descriptor_ = file->message_type(0);
  static const int BuildResults_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults, structure_),
  };
  BuildResults_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildResults_descriptor_,
      BuildResults::default_instance_,
      BuildResults_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildResults));
  BuildResults_FlexibleLinkage_descriptor_ = BuildResults_descriptor_->nested_type(0);
  static const int BuildResults_FlexibleLinkage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_FlexibleLinkage, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_FlexibleLinkage, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_FlexibleLinkage, value_),
  };
  BuildResults_FlexibleLinkage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildResults_FlexibleLinkage_descriptor_,
      BuildResults_FlexibleLinkage::default_instance_,
      BuildResults_FlexibleLinkage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_FlexibleLinkage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_FlexibleLinkage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildResults_FlexibleLinkage));
  BuildResults_FlexibleLinkage_Angle_descriptor_ = BuildResults_FlexibleLinkage_descriptor_->enum_type(0);
  BuildResults_Structure_descriptor_ = BuildResults_descriptor_->nested_type(1);
  static const int BuildResults_Structure_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_Structure, flexible_linkage_),
  };
  BuildResults_Structure_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildResults_Structure_descriptor_,
      BuildResults_Structure::default_instance_,
      BuildResults_Structure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_Structure, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResults_Structure, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildResults_Structure));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fBuildResultsPB_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildResults_descriptor_, &BuildResults::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildResults_FlexibleLinkage_descriptor_, &BuildResults_FlexibleLinkage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildResults_Structure_descriptor_, &BuildResults_Structure::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fBuildResultsPB_2eproto() {
  delete BuildResults::default_instance_;
  delete BuildResults_reflection_;
  delete BuildResults_FlexibleLinkage::default_instance_;
  delete BuildResults_FlexibleLinkage_reflection_;
  delete BuildResults_Structure::default_instance_;
  delete BuildResults_Structure_reflection_;
}

void protobuf_AddDesc_proto_2fBuildResultsPB_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032proto/BuildResultsPB.proto\022*molecular_"
    "dynamics.oligosaccharide_builder\"\215\003\n\014Bui"
    "ldResults\022U\n\tstructure\030\001 \003(\0132B.molecular"
    "_dynamics.oligosaccharide_builder.BuildR"
    "esults.Structure\032\264\001\n\017FlexibleLinkage\022\r\n\005"
    "index\030\001 \002(\005\022]\n\005angle\030\002 \002(\0162N.molecular_d"
    "ynamics.oligosaccharide_builder.BuildRes"
    "ults.FlexibleLinkage.Angle\022\r\n\005value\030\003 \002("
    "\001\"$\n\005Angle\022\007\n\003PHI\020\000\022\007\n\003PSI\020\001\022\t\n\005OMEGA\020\002\032"
    "o\n\tStructure\022b\n\020flexible_linkage\030\001 \003(\0132H"
    ".molecular_dynamics.oligosaccharide_buil"
    "der.BuildResults.FlexibleLinkage", 472);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/BuildResultsPB.proto", &protobuf_RegisterTypes);
  BuildResults::default_instance_ = new BuildResults();
  BuildResults_FlexibleLinkage::default_instance_ = new BuildResults_FlexibleLinkage();
  BuildResults_Structure::default_instance_ = new BuildResults_Structure();
  BuildResults::default_instance_->InitAsDefaultInstance();
  BuildResults_FlexibleLinkage::default_instance_->InitAsDefaultInstance();
  BuildResults_Structure::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fBuildResultsPB_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fBuildResultsPB_2eproto {
  StaticDescriptorInitializer_proto_2fBuildResultsPB_2eproto() {
    protobuf_AddDesc_proto_2fBuildResultsPB_2eproto();
  }
} static_descriptor_initializer_proto_2fBuildResultsPB_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* BuildResults_FlexibleLinkage_Angle_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildResults_FlexibleLinkage_Angle_descriptor_;
}
bool BuildResults_FlexibleLinkage_Angle_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const BuildResults_FlexibleLinkage_Angle BuildResults_FlexibleLinkage::PHI;
const BuildResults_FlexibleLinkage_Angle BuildResults_FlexibleLinkage::PSI;
const BuildResults_FlexibleLinkage_Angle BuildResults_FlexibleLinkage::OMEGA;
const BuildResults_FlexibleLinkage_Angle BuildResults_FlexibleLinkage::Angle_MIN;
const BuildResults_FlexibleLinkage_Angle BuildResults_FlexibleLinkage::Angle_MAX;
const int BuildResults_FlexibleLinkage::Angle_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int BuildResults_FlexibleLinkage::kIndexFieldNumber;
const int BuildResults_FlexibleLinkage::kAngleFieldNumber;
const int BuildResults_FlexibleLinkage::kValueFieldNumber;
#endif  // !_MSC_VER

BuildResults_FlexibleLinkage::BuildResults_FlexibleLinkage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuildResults_FlexibleLinkage::InitAsDefaultInstance() {
}

BuildResults_FlexibleLinkage::BuildResults_FlexibleLinkage(const BuildResults_FlexibleLinkage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuildResults_FlexibleLinkage::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  angle_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildResults_FlexibleLinkage::~BuildResults_FlexibleLinkage() {
  SharedDtor();
}

void BuildResults_FlexibleLinkage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildResults_FlexibleLinkage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildResults_FlexibleLinkage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildResults_FlexibleLinkage_descriptor_;
}

const BuildResults_FlexibleLinkage& BuildResults_FlexibleLinkage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBuildResultsPB_2eproto();  return *default_instance_;
}

BuildResults_FlexibleLinkage* BuildResults_FlexibleLinkage::default_instance_ = NULL;

BuildResults_FlexibleLinkage* BuildResults_FlexibleLinkage::New() const {
  return new BuildResults_FlexibleLinkage;
}

void BuildResults_FlexibleLinkage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    angle_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildResults_FlexibleLinkage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_angle;
        break;
      }
      
      // required .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage.Angle angle = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_angle:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::molecular_dynamics::oligosaccharide_builder::BuildResults_FlexibleLinkage_Angle_IsValid(value)) {
            set_angle(static_cast< ::molecular_dynamics::oligosaccharide_builder::BuildResults_FlexibleLinkage_Angle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_value;
        break;
      }
      
      // required double value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuildResults_FlexibleLinkage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // required .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage.Angle angle = 2;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->angle(), output);
  }
  
  // required double value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuildResults_FlexibleLinkage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // required .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage.Angle angle = 2;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->angle(), target);
  }
  
  // required double value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuildResults_FlexibleLinkage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // required .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage.Angle angle = 2;
    if (has_angle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->angle());
    }
    
    // required double value = 3;
    if (has_value()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildResults_FlexibleLinkage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildResults_FlexibleLinkage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildResults_FlexibleLinkage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildResults_FlexibleLinkage::MergeFrom(const BuildResults_FlexibleLinkage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildResults_FlexibleLinkage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildResults_FlexibleLinkage::CopyFrom(const BuildResults_FlexibleLinkage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildResults_FlexibleLinkage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void BuildResults_FlexibleLinkage::Swap(BuildResults_FlexibleLinkage* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(angle_, other->angle_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildResults_FlexibleLinkage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildResults_FlexibleLinkage_descriptor_;
  metadata.reflection = BuildResults_FlexibleLinkage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BuildResults_Structure::kFlexibleLinkageFieldNumber;
#endif  // !_MSC_VER

BuildResults_Structure::BuildResults_Structure()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuildResults_Structure::InitAsDefaultInstance() {
}

BuildResults_Structure::BuildResults_Structure(const BuildResults_Structure& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuildResults_Structure::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildResults_Structure::~BuildResults_Structure() {
  SharedDtor();
}

void BuildResults_Structure::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildResults_Structure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildResults_Structure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildResults_Structure_descriptor_;
}

const BuildResults_Structure& BuildResults_Structure::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBuildResultsPB_2eproto();  return *default_instance_;
}

BuildResults_Structure* BuildResults_Structure::default_instance_ = NULL;

BuildResults_Structure* BuildResults_Structure::New() const {
  return new BuildResults_Structure;
}

void BuildResults_Structure::Clear() {
  flexible_linkage_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildResults_Structure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage flexible_linkage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_flexible_linkage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_flexible_linkage()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_flexible_linkage;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuildResults_Structure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage flexible_linkage = 1;
  for (int i = 0; i < this->flexible_linkage_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->flexible_linkage(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuildResults_Structure::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage flexible_linkage = 1;
  for (int i = 0; i < this->flexible_linkage_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->flexible_linkage(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuildResults_Structure::ByteSize() const {
  int total_size = 0;
  
  // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.FlexibleLinkage flexible_linkage = 1;
  total_size += 1 * this->flexible_linkage_size();
  for (int i = 0; i < this->flexible_linkage_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->flexible_linkage(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildResults_Structure::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildResults_Structure* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildResults_Structure*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildResults_Structure::MergeFrom(const BuildResults_Structure& from) {
  GOOGLE_CHECK_NE(&from, this);
  flexible_linkage_.MergeFrom(from.flexible_linkage_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildResults_Structure::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildResults_Structure::CopyFrom(const BuildResults_Structure& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildResults_Structure::IsInitialized() const {
  
  for (int i = 0; i < flexible_linkage_size(); i++) {
    if (!this->flexible_linkage(i).IsInitialized()) return false;
  }
  return true;
}

void BuildResults_Structure::Swap(BuildResults_Structure* other) {
  if (other != this) {
    flexible_linkage_.Swap(&other->flexible_linkage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildResults_Structure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildResults_Structure_descriptor_;
  metadata.reflection = BuildResults_Structure_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BuildResults::kStructureFieldNumber;
#endif  // !_MSC_VER

BuildResults::BuildResults()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuildResults::InitAsDefaultInstance() {
}

BuildResults::BuildResults(const BuildResults& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuildResults::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildResults::~BuildResults() {
  SharedDtor();
}

void BuildResults::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildResults::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildResults_descriptor_;
}

const BuildResults& BuildResults::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBuildResultsPB_2eproto();  return *default_instance_;
}

BuildResults* BuildResults::default_instance_ = NULL;

BuildResults* BuildResults::New() const {
  return new BuildResults;
}

void BuildResults::Clear() {
  structure_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.Structure structure = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_structure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_structure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_structure;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuildResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.Structure structure = 1;
  for (int i = 0; i < this->structure_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->structure(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuildResults::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.Structure structure = 1;
  for (int i = 0; i < this->structure_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->structure(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuildResults::ByteSize() const {
  int total_size = 0;
  
  // repeated .molecular_dynamics.oligosaccharide_builder.BuildResults.Structure structure = 1;
  total_size += 1 * this->structure_size();
  for (int i = 0; i < this->structure_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->structure(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildResults::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildResults* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildResults*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildResults::MergeFrom(const BuildResults& from) {
  GOOGLE_CHECK_NE(&from, this);
  structure_.MergeFrom(from.structure_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildResults::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildResults::CopyFrom(const BuildResults& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildResults::IsInitialized() const {
  
  for (int i = 0; i < structure_size(); i++) {
    if (!this->structure(i).IsInitialized()) return false;
  }
  return true;
}

void BuildResults::Swap(BuildResults* other) {
  if (other != this) {
    structure_.Swap(&other->structure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildResults::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildResults_descriptor_;
  metadata.reflection = BuildResults_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace oligosaccharide_builder
}  // namespace molecular_dynamics

// @@protoc_insertion_point(global_scope)
